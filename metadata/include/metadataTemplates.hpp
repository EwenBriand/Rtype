/*
** EPITECH PROJECT, 2023
** rtype
** File description:
** metadataTemplates.hpp
*/

#pragma once

#include <string>

static const std::string THIS_DIR = "./";

static const std::string FOLDER_DOT_METADATA = ".metadata ";

static const std::string KW_CLASS = "class";
static const std::string KW_STRUCT = "struct";
static const std::string KW_SERIALIZE = "serialize";

static const std::string CLOSED_BRACKET = "}\n";

static const std::string FINALIZE_SAVE_FUNCTION = "\tconfig.writeFile(filepath.c_str());\n}" + CLOSED_BRACKET;
static const std::string FINALIZE_METADATA_FUNCTION = "\treturn metadata;\n" + CLOSED_BRACKET;

static const std::string METADATA_FILE_INCLUDES = R"(
/*
** This file was generated automatically by the metadata generator.
** Do not edit this file manually.
*/
#include <sstream>
#include <iostream>
#include "metadata.hpp"
)";

#define INIT_LOAD_FUNCTION(className) \
    "void " + className + "::Load(const std::string& filepath)\n{\n\tlibconfig::Config config;\n\tconfig.readFile(filepath.c_str());\n\tlibconfig::Setting& root = config.getRoot();\n"

#define INIT_SAVE_FUNCTION(className) \
    "void " + className + "::Save(const std::string& filepath)\n{\n\tlibconfig::Config config;\n\tlibconfig::Setting& root = config.getRoot();\n"

#define INIT_METADATA_FUNCTION(className) \
    "std::map<std::string, metadata_t> " + className + "::GetMetadata()\n{\n\tstd::map<std::string, metadata_t> metadata;\n"

#define INIT_CMAKE(folder)                                                                         \
    "cmake_minimum_required(VERSION 3.0)\n"                                                        \
    "project(autogen)\n"                                                                           \
    "\n"                                                                                           \
    "set(CMAKE_CXX_STANDARD 20)\n"                                                                 \
    "include_directories("                                                                         \
        + folder + "\n"                                                                            \
        + folder + "../../../metadata/include/ ../../metadata/include/ \n"                         \
        + "../../ecs/include/\n"                                                                   \
        + " ../../ecs/raylib/raylib/include/ \n"                                                   \
        + folder + "/../../ecs/raylib/src/ \n"                                                     \
        + folder + "../../raylib/src/ \n"                                                          \
        + folder + "../../raylib/examples/shapes/ )\n\n"                                           \
        + "set(CMAKE_RUNTIME_OUTPUT_DIRECTORY " + folder + ")\n"                                   \
        + "set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH}  ${CMAKE_CURRENT_SOURCE_DIR}/../build/)\n" \
        + "link_directories(\n"                                                                    \
        + "\t${CMAKE_CURRENT_SOURCE_DIR}/ecs/raylib/raylib/\n"                                     \
        + "\t${CMAKE_CURRENT_SOURCE_DIR}/../ecs/raylib/raylib/\n"                                  \
        + ")\n"