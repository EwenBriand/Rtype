.TH "ecs::INode" 3 "Mon Dec 18 2023" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ecs::INode \- This \fBINode\fP child classes are designed to work with the \fBEventGraph\fP class\&. When an \fBINode\fP component is added loaded in the ecs, it should register itself to the \fBEventGraph\fP class, so that the \fBEventGraph\fP can reference to the \fBINode\fP and instanciate it\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <INode\&.hpp>\fP
.PP
Inherited by \fBecs::ANode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBExecute\fP (int entityID)=0"
.br
.RI "Executes the script of the node\&. It should register the fact that it has run during this frame\&. The outputs fields of the node should be updated to reflect the changes made by the script\&. "
.ti -1c
.RI "virtual void \fBDraw\fP ()=0"
.br
.RI "Draws the node on the screen\&. "
.in -1c
.SH "Detailed Description"
.PP 
This \fBINode\fP child classes are designed to work with the \fBEventGraph\fP class\&. When an \fBINode\fP component is added loaded in the ecs, it should register itself to the \fBEventGraph\fP class, so that the \fBEventGraph\fP can reference to the \fBINode\fP and instanciate it\&. 

The \fBINode\fP child class should either be Vanilla components or AUserComponents\&. Nodes should normally be instantiated through the \fBEventGraph\fP and not directly, so that the \fBEventGraph\fP can keep track of the instances\&.
.PP
The reflection system should handle the serialization of the nodes\&. To allow this, any member of the node that should be an input pin should have its name start with 'input_', and any output pin should start with 'output_'\&.
.PP
Any other member of the node will be ignored by the event graph (but if marked as 'serialize' fields, they will be serialized nonetheless)\&.
.PP
\fBNote\fP
.RS 4
As components, the \fBINode\fP children should not have much logic in the Update method, as any significat action should be done in the Execute\&. However, the Update method will be called nonetheless everyframe\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "virtual void ecs::INode::Draw ()\fC [pure virtual]\fP"

.PP
Draws the node on the screen\&. 
.PP
Implemented in \fBecs::ANode\fP\&.
.SS "virtual void ecs::INode::Execute (int entityID)\fC [pure virtual]\fP"

.PP
Executes the script of the node\&. It should register the fact that it has run during this frame\&. The outputs fields of the node should be updated to reflect the changes made by the script\&. 
.PP
\fBNote\fP
.RS 4
This method should be called only once per frame\&. 
.RE
.PP

.PP
Implemented in \fBNodePrintStr\fP, and \fBNodeStr\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
